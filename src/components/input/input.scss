@use "../../scss/variables" as vars;
@use "../../scss/media-queries" as medias;
@use "../../scss/utils" as utils;

.ls-input-container {
  display: inline-flex;
  flex-flow: column nowrap;
  min-width: vars.$inputs-min-width;

  .ls-input-label-container {
    display: flex;
    justify-content: space-between;
    position: relative;
      margin-bottom: vars.$inputs-label-margin-bottom;

    .ls-error-tooltip-container {
      .ls-error-tooltip-text {
        // position and size
        position: absolute;
        top: -4px;
        left: calc(100% + 5px);
        transform: translateX(calc(-100% - 28px));
        width: utils.to-rem(200);
        padding: utils.to-rem(12) utils.to-rem(16);
        border-radius: utils.to-rem(8);

        // misc
        display: inline;
        user-select: none;
        background: vars.$inputs-errored-tooltip-background-color;;

        // font
        color: vars.$inputs-errored-tooltip-text-color;
        font-size: vars.$inputs-errored-tooltip-font-size-mobile;
        font-weight: vars.$inputs-errored-tooltip-font-weight;

        @include medias.tablet {
          font-size: vars.$inputs-errored-tooltip-font-size-tablet;
        }

        @include medias.desktop {
          font-size: vars.$inputs-errored-tooltip-font-size-desktop;
        }

        &::after {
          content: "";
          position: absolute;
          top: 6px;
          left: calc(100% - 8px);
          width: 10px;
          height: 10px;
          transform: rotate(45deg);
          background: vars.$inputs-errored-tooltip-background-color;
        }
      }
    }

    .ls-input-icon {
      position: absolute;
      right: 0;
      top: 50%;
      transform: translateY(-50%);
      opacity: 0;
      transition: opacity 150ms ease-in-out;
      pointer-events: none;

      &.ls-icon-visible {
        pointer-events: initial;
        opacity: 1;
      }

      &.ls-icon-valid {
        color: vars.$inputs-valid-icon-color
      }

      &.ls-icon-errored {
        cursor: pointer;
        color: vars.$inputs-errored-icon-color
      }
    }
  }

  .ls-input {
    display: flex;
    transition: all 150ms ease-in-out;

    // font
    font-family: vars.$inputs-content-font-family;
    font-size: vars.$inputs-content-font-size;
    font-weight: vars.$inputs-content-font-weight;
    line-height: vars.$inputs-content-line-height;
    letter-spacing: vars.$inputs-content-letter-spacing;

    // spacing
    border: vars.$inputs-border-width solid vars.$inputs-border-color;
    border-radius: vars.$inputs-border-radius;
    padding: vars.$inputs-padding;

    // color
    color: vars.$inputs-value-color;
    background-color: vars.$inputs-background-color;
    outline: none;

    @include utils.if-there('box-shadow', vars.$inputs-shadow);

    &::placeholder {
      // font
      font-family: vars.$inputs-label-font-family;
      font-size: vars.$inputs-label-font-size;
      font-weight: vars.$inputs-label-font-weight;
      line-height: vars.$inputs-label-line-height;
      letter-spacing: vars.$inputs-label-letter-spacing;

      // color
      color: vars.$inputs-placeholder-color;
    }

    &:hover {
      box-shadow: vars.$inputs-hover-shadow;

      @include utils.if-there('border-color', vars.$inputs-hover-border-color);
      @include utils.if-there('color', vars.$inputs-hover-value-color);
      @include utils.if-there-pseudo('color', vars.$inputs-hover-placeholder-color, '&::placeholder');
    }

    &:active {
      box-shadow: vars.$inputs-active-shadow;

      @include utils.if-there('border-color', vars.$inputs-active-border-color);
      @include utils.if-there('color', vars.$inputs-active-value-color);
      @include utils.if-there-pseudo('color', vars.$inputs-active-placeholder-color, '&::placeholder');
    }

    &:focus {
      box-shadow: vars.$inputs-focus-shadow;

      @include utils.if-there('border-color', vars.$inputs-focus-border-color);
      @include utils.if-there('color', vars.$inputs-focus-value-color);
      @include utils.if-there-pseudo('color', vars.$inputs-focus-placeholder-color, '&::placeholder');
    }

    &:disabled {
      color: vars.$inputs-disabled-value-color;
      border-color: vars.$inputs-disabled-border-color;
      box-shadow: vars.$inputs-disabled-shadow;
      background-color: #f5f5f5; // Optional: Change background for disabled state
      cursor: not-allowed;


      &::placeholder {
        color: vars.$inputs-disabled-placeholder-color;
      }
    }

    &.ls-valid {
      color: vars.$inputs-valid-value-color;
      border-color: vars.$inputs-valid-border-color;
      box-shadow: vars.$inputs-valid-shadow;


      &::placeholder {
        color: vars.$inputs-valid-placeholder-color;
      }
    }

    &.ls-errored {
      border-color: vars.$inputs-errored-border-color;

      @include utils.if-there('color', vars.$inputs-errored-value-color);
      @include utils.if-there('box-shadow', vars.$inputs-errored-shadow);
      @include utils.if-there-pseudo('color', vars.$inputs-errored-placeholder-color, '&::placeholder');
    }
  }
}
